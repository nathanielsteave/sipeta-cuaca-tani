---
const navItems = [
    { href: '/', label: 'Beranda' },
    { href: '/prakiraan', label: 'Prakiraan' },
    { href: '/panduan-petani', label: 'Panduan' },
    { href: '/tentang', label: 'Tentang' },
    { href: '/kontak', label: 'Kontak' },
];
const currentPath = Astro.url.pathname;
---
<header class="bg-white/90 backdrop-blur-md sticky top-0 z-50 shadow-sm">
    <nav class="container mx-auto px-4 sm:px-6 lg:px-8 py-3 flex justify-between items-center">
        <a href="/" class="text-2xl font-extrabold text-primary-600">SIPETA</a>
        <div class="hidden md:flex items-center space-x-6">
            {navItems.map(item => (
                <a href={item.href} class:list={["font-semibold text-neutral-600 hover:text-primary-600 transition-colors duration-300", { "text-primary-600 border-b-2 border-primary-600": item.href === currentPath }]}>
                    {item.label}
                </a>
            ))}
        </div>
        <div class="md:hidden">
            <button id="mobile-menu-button" class="text-neutral-600 p-2 rounded-md hover:text-primary-500 hover:bg-primary-100 focus:outline-none" aria-label="Buka menu">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path></svg>
            </button>
        </div>
    </nav>
    <div id="mobile-menu" class="hidden md:hidden bg-white shadow-lg absolute top-full left-0 w-full z-40">
        <ul class="py-2">
            {navItems.map(item => (
                <li><a href={item.href} class:list={["block px-4 py-3 text-base font-semibold", currentPath === item.href ? 'text-primary-600 bg-primary-50' : 'text-neutral-600 hover:bg-neutral-100 hover:text-primary-600']}>{item.label}</a></li>
            ))}
        </ul>
    </div>
</header>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        if (mobileMenuButton && mobileMenu) {
            mobileMenuButton.addEventListener('click', (event) => {
                event.stopPropagation();
                mobileMenu.classList.toggle('hidden');
            });
            document.addEventListener('click', (event) => {
                const isClickInsideMenu = mobileMenu.contains(event.target as Node);
                const isClickOnButton = mobileMenuButton.contains(event.target as Node);
                if (!isClickInsideMenu && !isClickOnButton && !mobileMenu.classList.contains('hidden')) {
                    mobileMenu.classList.add('hidden');
                }
            });
        }
    });
</script>